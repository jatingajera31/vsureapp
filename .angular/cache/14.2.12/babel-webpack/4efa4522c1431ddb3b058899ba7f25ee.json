{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { ENVIRONMENT } from 'src/environments/environment';\nexport var APIStatus = /*#__PURE__*/(() => {\n  (function (APIStatus) {\n    APIStatus[APIStatus[\"SUCCESS\"] = 200] = \"SUCCESS\";\n    APIStatus[APIStatus[\"FAILURE\"] = 500] = \"FAILURE\";\n    APIStatus[APIStatus[\"EXCEPTION\"] = 400] = \"EXCEPTION\";\n    APIStatus[APIStatus[\"UNAUTHORIZED\"] = 401] = \"UNAUTHORIZED\";\n  })(APIStatus || (APIStatus = {}));\n\n  return APIStatus;\n})();\nexport class HttpHelper {\n  constructor() {\n    this.apiUrl = '';\n    this.hostUrl = '';\n    this.apiUrl = ENVIRONMENT.API.hostUrl;\n    this.hostUrl = ENVIRONMENT.API.hostUrl;\n  }\n\n  getHttpOptions(options) {\n    let headers = new HttpHeaders();\n    headers = headers.append('Authorization', `Bearer ${localStorage.getItem('access_token')}`);\n\n    if (options && options.loader === false) {\n      headers = headers.append('InterceptorNoLoader', '');\n    }\n\n    if (options && options.errorMessage === false) {\n      headers = headers.append('InterceptorNoErrorMessage', '');\n    }\n\n    if (options && options.token === false) {\n      headers = headers.delete('Authorization');\n    }\n\n    if (options && options.hasOwnProperty('isJSONRequest') && options.isJSONRequest) {\n      headers.append('Content-Type', 'application/json');\n    }\n\n    if (options && options.hasOwnProperty('isMultiPart') && options.isMultiPart) {\n      headers.append('Content-Type', 'multipart/form-data');\n    } // if (options && options.isJSONRequest === false) {\n    //     headers = headers.delete('Content-Type');\n    // } else {\n    //     headers = headers.append('Content-Type', 'application/json');\n    // }\n\n\n    if (options && options.hasOwnProperty('additionalParams')) {\n      options.additionalParams.map(param => {\n        headers = headers.append(param.name, param.value);\n      });\n    }\n\n    const httpOptions = {\n      headers\n    };\n    return httpOptions;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}